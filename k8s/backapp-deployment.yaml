apiVersion: apps/v1
kind: Deployment
metadata:
  name: backapp
  namespace: backend-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backapp
  template:
    metadata:
      labels:
        app: backapp
    spec:
      initContainers:
      - name: check-database-service
        image: busybox
        command: ['sh', '-c', 'until nc -z -v -w30 postgresdb.backend-app.svc.cluster.local 5432; do echo "Attente de la base de donn√©es..."; sleep 5; done']

      containers:
        - name: backapp
          image: gr77/backapp:v2.0.0
          ports:
            - containerPort: 8887
          env:
            - name: PG_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-database
            - name: PG_HOST
              value: "postgresdb"
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-username
          
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8887
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8887
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      # restartPolicy: Always
